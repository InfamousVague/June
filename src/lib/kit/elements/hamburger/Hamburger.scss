$appearances: (
    primary: --text-color,
    secondary: --text-color-muted,
    info: --color-info,
    success: --color-success,
    warning: --color-warning,
    error: --color-error,
    bright: --text-color-light,
	muted: --text-color-muted,
    inherit: inherit
);

.hamburger {
	background: none;
	border: none;
	cursor: pointer;
	display: inline-flex;
	align-items: center;
	justify-content: center;
    color: var(--text-color-muted);
	padding: 0;

	.icon {
		width: var(--text-size-large);
		height: var(--text-size-large);
		stroke: currentColor;
		stroke-width: 2;
		fill: none;
	}

    &.size_extra_small {
        .icon {
            width: calc(var(--text-size-extra-small) * 2);
		    height: calc(var(--text-size-extra-small) * 2);
        }
    }

    &.size_small {
        .icon {
            width: calc(var(--text-size-small) * 2);
		    height: calc(var(--text-size-small) * 2);
        }
    }

    &.size_medium {
        .icon {
            width: calc(var(--text-size-medium) * 2);
		    height: calc(var(--text-size-medium) * 2);
        }
    }

    &.size_large {
        .icon {
            width: calc(var(--text-size-large) * 2);
		    height: calc(var(--text-size-large) * 2);
        }
    }

    &.size_extra_large {
        .icon {
            width: calc(var(--text-size-extra-large) * 2);
		    height: calc(var(--text-size-extra-large) * 2);
        }
    }

	.line {
		transition: transform var(--animation-duration-fast) ease, opacity var(--animation-duration-fast) ease;
		transform-origin:  calc(var(--text-size-large) / 2) calc(var(--text-size-large) / 2);
	}

	.line.top {
		transform: translateY(calc((var(--text-size-large) / 4) * -1));
	}

	.line.bottom {
		transform: translateY(calc(var(--text-size-large) / 4));
	}

	&.open {
		.line.top {
			transform: rotate(45deg);
		}
		.line.middle {
			opacity: 0;
		}
		.line.bottom {
			transform: rotate(-45deg);
		}
	}

	@each $appearance, $var in $appearances {
        &.appearance_#{$appearance} {
            color: if($appearance == inherit, inherit, var(#{$var}));
        }
    }
}